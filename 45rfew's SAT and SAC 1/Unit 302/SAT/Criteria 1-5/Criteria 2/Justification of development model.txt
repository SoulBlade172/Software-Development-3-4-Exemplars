The waterfall model follows a linear approach, requiring each stage to have its own project plan. Due to its linearity it requires each previous task to be completed before the following task can be completed. This means that is very hard and time-consuming to go back once a task is finished and no shortcuts can be taken. If there are any critical problems that occur later on the project it may cost the company a lot of money to go back and resolve the problem. The waterfall model requires all requirements and needs of the client to be determined before the project begins, with no feedback being received throughout the project. The only interaction the client will have is within the analysis stage during data collection, until they receive the final product and give feedback on it. However, this poses a risk as we release our entire project at once and as there is little testing done within Waterfall, the risk of development errors is higher. 
Using a waterfall would increase simplicity of production and a reduced risk in unexpected costs throughout development. Due to the limited time and relatively small scope of my teacher grades tracker using the waterfall model will be quite beneficial as it reduces complexity and management times of the project allowing for more focus on other more important aspects such as development. Furthermore, scope creep, which would pose a massive threat if any of the other development models are used, is not relevant when using a waterfall development model due to its complete linearity. As the specifications and scope are small and well defined using waterfall is quite appropriate for my teacher grades tracker in contrast to agile and spiral where the specifications and requirements could change at any stage. 
 
The Agile method involves having multiple sprints (iterations) where at the end of each sprint the client can observe and evaluate the result of each sprint. The client provides feedback allowing for changes to be made to the project throughout as required, meaning that it is much less linear than Waterfall. However, due to agile requiring a high level of skill in project management, the possibility of the timeline being extended and scope creep – project costs and timeframe being extended due to higher and higher ambitions of the client – I have decided that using agile poses more risks than the benefits and therefore not a suitable development model for my teacher grades tracker.
 
The spiral model mainly focuses on preventing risks and acquiring client feedback as the project progresses. It starts with a short stage of analysis and then a large stage of risk identification. After this, the development and testing phase begins, followed by planning for the following cycle. This process is repeated, adding more tasks and growing in scope/cost until a minimum viable product is created. Spiral methods are very well suited for large-scale projects that have many risks or when the client isn’t sure how to proceed. Furthermore, a Spiral method requires a high skill level to manage and similar to Agile is at risk of scope creep. My teacher grades tracker is a relatively small project with only one developer and well-defined requirements/scope. This has lead me to decide that the Spiral method is not a suitable development model.
